#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>

多个进程同时访问同一个资源造成混乱

使用信号量避免这种问题

如何避免：
获取信号量（打开信号量 ）：
	int semget(key_t key, int nsems, int semflg);
	函数功能：获取信号量标示符
	当key所指的信号量不存在时，会自动创建h
	返回值：失败返回-1，成功返回信号量标识符
	参数：
	key：键值（可以找到信号量）
		1.性质
		2.作用
		key_t ftok(name , id)构造键值，参数一文件名，参数二项目id
	nsems：创建的信号量集合里所包含的数目
	semflg;标志，可以取  IPC_CREAT and IPC_EXCL 
操作信号量：
	int semop(int semid, struct sembuf *sops, unsigned nsops);
	功能：操作信号量集合中的信号量
	返回值;成功返回0，失败返回-1
	参数说明：
	semid ：要操作的信号量集合的标识符
	sops:   ture are of type struct sembuf, containing the following members:

           unsigned short sem_num;  /* semaphore number */
           short          sem_op;   /* semaphore operation */
           short          sem_flg;  /* operation flags */
	nsops:要操作多少信号量
	sops：对信号量执行什么操作