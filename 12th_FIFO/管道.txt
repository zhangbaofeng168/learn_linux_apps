linux进程之间需要通信（进程间通信IPC）
通讯目的：
1.数据传输
2.资源共享
3.通知事件
4.进程控制

POSIC：可移植的操作系统接口 统一的函数接口

linux之间的通信方式

1.无名管道（PIPE）
2.有名管道（FIFO）
3.信号（SIGNAL）
4.消息队列
5.共享内存
6.信号量
7.套接字（SOCKET）

管道通讯：
1.单向的，有固定的读写端
2.数据从管道中读出后，在该管道中就不存在该数据了
3.当进程去读取空管道，进程会阻塞
4.当进程往满管道写入数据时，进程会阻塞
5.管道容量为64KB

无名管道
	1.创建无名管道（pipe）
		int pipe(int pipefd[2]);
		pipefd[0] 读端文件描述符
		pipefd[1] 写端文件描述符
		成功返回0，失败返回-1
	2.读写无名管道
		2.1管道被创建后读写端为两个文件，读端文件，写端文件
		2.2对管道的操作，可视为对文件的操作
	3.关闭管道

有名管道

1.读取数据后数据就没有了
	
2.只能以只读只写方式打开
	
	创建管道：FIFO文件
	
	int mkfifo(const char *pathname, mode_t mode);
	
	pathname /*创建文件的路径*/
	mode     /*创建文件的访问权限*/
	成功返回0，失败返回-1
	
	删除管道：
	
	int unlink(const char *pathname);
	
	pathname /*文件的路径*/
	成功返回0，失败返回-1
